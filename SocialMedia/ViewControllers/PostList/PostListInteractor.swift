//
//  PostListInteractor.swift
//  SocialMedia
//
//  Created by Yeşim Daşdemir on 21.11.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PostListBusinessLogic {
    func getPostList()
}

protocol PostListDataStore {
    //var name: String { get set }
}

final class PostListInteractor: PostListBusinessLogic, PostListDataStore {
    var presenter: PostListPresentationLogic?
    var worker: PostListWorker?
    
    func getPostList() {
        
        let url = "https://jsonplaceholder.typicode.com/posts"
        LoadingViewController.shared.showLoading()
        
        if Storage.fileExists("postList", in: .caches) {
            LoadingViewController.shared.hideLoading()
            
            let savedResponse = Storage.retrieve("postList", from: .caches, as: [PostList.GetPosts.Response].self)
            self.presenter?.presentPostList(with: savedResponse)
            
        } else {
            NetworkManager.fetchData(url: url) { [weak self] (response: [PostList.GetPosts.Response]) in
                guard let self = self, !response.isEmpty else {
                    return
                }
                LoadingViewController.shared.hideLoading()
                Storage.store(response.self, to: .caches, as: "postList")
                
                self.presenter?.presentPostList(with: response)
                debugPrint(response)
            }
        }
    }
}
